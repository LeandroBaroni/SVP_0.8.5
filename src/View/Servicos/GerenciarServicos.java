/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View.Servicos;

import Dao.Class.Funcionario;
import Dao.Class.Linha;
import Dao.Class.Servico;
import Dao.Controller.FuncionarioControlador;
import Dao.Controller.LinhaControlador;
import Dao.Controller.ServicoControlador;
import View.MenuPrincipal;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Leandro Baroni
 */
public class GerenciarServicos extends javax.swing.JDialog {

    Servico S = new Servico();
    ServicoControlador SC = new ServicoControlador();    
    Linha L = new Linha();
    LinhaControlador LC = new LinhaControlador();    
    Funcionario F = new Funcionario();
    FuncionarioControlador FC = new FuncionarioControlador();
    public String usuario;

    DefaultTableModel model;

    /**
     * Creates new form GerenciarServicos
     */
    public GerenciarServicos(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public void setUsuarios(){
        F = FC.buscar(usuario);
        String tipo = F.getTipo();
        System.out.println("USUARIO: " + F.getLogin() + "/ "
                + "Tipo: "+ tipo);
    }

    public void setValores(){
        setUsuarios();
        setBotao();
        setServicos();
        setLinhas();
        System.out.println("------------------------------");
    }

    public void setBotao(){
        jTable.setVisible(false);
        btAlterar.setEnabled(false);
        btExcluir.setEnabled(false);
        jDateChooser.setDate(new Date());
    }

    public void setLibTable(){
        jTable.setEnabled(true);
    }

    public void setServicos(){
        for (Servico servico : SC.buscarServico()) {
            cbServicos.addItem(Integer.toString(servico.getCodigo()));
        }
    }

    public void setLinhas(){
        for (Linha linha : LC.buscarPrefx()) {
            cbPrefixo.addItem(Integer.toString(linha.getPrefixo()));
        }
    }

    public void habiTela(){
        jTable.setVisible(true);
        btAlterar.setEnabled(true);
        btExcluir.setEnabled(true);
    }

    public void tela(int a, String c){
        List<Servico>list = SC.buscarTodosServicos(a, c);
        model = (DefaultTableModel) jTable.getModel();
        Object rowData[] = new Object[6];
        model.setRowCount(0);
        for(int i =0; i< list.size(); i++){
            rowData[0] = list.get(i).getCodigo();
            rowData[1] = list.get(i).getdViagem();
            rowData[2] = list.get(i).gethViagem();
            rowData[3] = list.get(i).getCodPrefixo();
            rowData[4] = list.get(i).getQtdPoltronasOcup();
            rowData[5] = list.get(i).getQtdPoltronas();
            model.addRow(rowData);
        }
    }

    public void tela(int a, int b, String c){
        List<Servico>list = SC.buscarTodosServicos(a, b, c);
        model = (DefaultTableModel) jTable.getModel();
        Object rowData[] = new Object[6];
        model.setRowCount(0);
        for(int i =0; i< list.size(); i++){
            rowData[0] = list.get(i).getCodigo();
            rowData[1] = list.get(i).getdViagem();
            rowData[2] = list.get(i).gethViagem();
            rowData[3] = list.get(i).getCodPrefixo();
            rowData[4] = list.get(i).getQtdPoltronasOcup();
            rowData[5] = list.get(i).getQtdPoltronas();
            model.addRow(rowData);
        }
    }

    public void refresh(){
        List<Servico>list = SC.buscarServico();
        model = (DefaultTableModel) jTable.getModel();
        Object rowData[] = new Object[6];
        model.setRowCount(0);
        for(int i =0; i< list.size(); i++){
            rowData[0] = list.get(i).getCodigo();
            rowData[1] = list.get(i).getdViagem();
            rowData[2] = list.get(i).gethViagem();
            rowData[3] = list.get(i).getCodPrefixo();
            rowData[4] = list.get(i).getQtdPoltronasOcup();
            rowData[5] = list.get(i).getQtdPoltronas();
            model.addRow(rowData);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btCriar = new javax.swing.JButton();
        btAlterar = new javax.swing.JButton();
        btFechar = new javax.swing.JButton();
        cbServicos = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        cbPrefixo = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        btProcurar = new javax.swing.JButton();
        btExcluir = new javax.swing.JButton();
        jDateChooser = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAlwaysOnTop(true);

        btCriar.setText("R. Serviço");
        btCriar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCriarActionPerformed(evt);
            }
        });

        btAlterar.setText("Alterar");
        btAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAlterarActionPerformed(evt);
            }
        });

        btFechar.setText("Fechar");
        btFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFecharActionPerformed(evt);
            }
        });

        cbServicos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Serviço", "Data", "Horario", "Prefixo", "Polt Ocupadas", "Polt Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable);
        if (jTable.getColumnModel().getColumnCount() > 0) {
            jTable.getColumnModel().getColumn(0).setResizable(false);
            jTable.getColumnModel().getColumn(1).setResizable(false);
            jTable.getColumnModel().getColumn(2).setResizable(false);
            jTable.getColumnModel().getColumn(3).setResizable(false);
            jTable.getColumnModel().getColumn(4).setResizable(false);
            jTable.getColumnModel().getColumn(5).setResizable(false);
        }

        jLabel1.setText("Serviços");

        cbPrefixo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));

        jLabel2.setText("Prefixo");

        btProcurar.setText("Procurar");
        btProcurar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btProcurarActionPerformed(evt);
            }
        });

        btExcluir.setText("Excluir");
        btExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirActionPerformed(evt);
            }
        });

        jLabel3.setText("Data");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btCriar)
                        .addGap(46, 46, 46)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btFechar)
                            .addComponent(btAlterar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btExcluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(52, 52, 52)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(62, 62, 62)
                                .addComponent(cbServicos, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbPrefixo, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jDateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btProcurar, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(15, 15, 15)))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btCriar)
                .addGap(15, 15, 15)
                .addComponent(btAlterar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btExcluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btFechar)
                .addGap(30, 30, 30))
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btProcurar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jDateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbPrefixo)
                    .addComponent(cbServicos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btCriarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCriarActionPerformed
        RegistrarServicos form = new RegistrarServicos(null, true);
        form.usuario = F.getLogin();
        form.setValores();
        this.dispose();
        form.setLocationRelativeTo(null);
        form.setVisible(true);
    }//GEN-LAST:event_btCriarActionPerformed

    private void btFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFecharActionPerformed
        MenuPrincipal form = new MenuPrincipal(null, true);
        form.usuario = F.getLogin();
        form.setValores();
        this.dispose();
        form.setLocationRelativeTo(null);
        form.setVisible(true);
    }//GEN-LAST:event_btFecharActionPerformed

    private void btProcurarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btProcurarActionPerformed
        int servico = 0;
        try{
            if(cbServicos.getSelectedIndex() == 0 || jDateChooser.equals("")){
                JOptionPane.showMessageDialog(null,"Escolha o serviço/data da viagem", "Erro", JOptionPane.INFORMATION_MESSAGE);
            }else{
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                Date date = jDateChooser.getDate();
                String dia = sdf.format(date);

                servico = Integer.parseInt(cbServicos.getSelectedItem().toString());
                int prefixo;
                if (cbPrefixo.getSelectedIndex() != 0) {
                    System.out.println("if");
                    prefixo = Integer.parseInt(cbPrefixo.getSelectedItem().toString());
                    tela(servico, prefixo, dia);
                }else{
                    System.out.println("else");
                    tela(servico, dia);
                }
                habiTela();
            }

        }catch(NumberFormatException | NullPointerException ex){
            JOptionPane.showMessageDialog(null, ex, "Erro", JOptionPane.INFORMATION_MESSAGE);
        }catch(IllegalArgumentException iex){
            JOptionPane.showMessageDialog(null, iex, "Erro", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btProcurarActionPerformed

    private void btAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAlterarActionPerformed
        model = (DefaultTableModel) jTable.getModel();
        int linhaSelec = jTable.getSelectedRow();
        if(jTable.getSelectedRow() == -1){
            if(jTable.getSelectedRowCount() == 0){
                JOptionPane.showMessageDialog(null, "Tabela está vazia", "Não Encontrado", JOptionPane.INFORMATION_MESSAGE);
            }else{
                JOptionPane.showMessageDialog(null, "Selecione um Perfil !!!", "Não Encontrado", JOptionPane.INFORMATION_MESSAGE);
            }
        }else{
            UpdServico form = new UpdServico(null, true);
            int v = Integer.parseInt(model.getValueAt(linhaSelec, 0).toString());
            form.codUsu = v;
            form.usuario = F.getLogin();
            form.codServico = Integer.parseInt(model.getValueAt(linhaSelec, 0).toString());
            form.codPref = Integer.parseInt(model.getValueAt(linhaSelec, 3).toString());
            form.data = model.getValueAt(linhaSelec, 1).toString();
            form.hora = model.getValueAt(linhaSelec, 2).toString();

            form.setValores();
            this.dispose();
            form.setLocationRelativeTo(null);
            form.setVisible(true);
        }
    }//GEN-LAST:event_btAlterarActionPerformed

    private void btExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirActionPerformed
        model = (DefaultTableModel) jTable.getModel();
        int linhaSelec = jTable.getSelectedRow();
        if(jTable.getSelectedRow() == -1){
            if(jTable.getSelectedRowCount() == 0){
                JOptionPane.showMessageDialog(null, "Tabela está vazia", "Não Encontrado", JOptionPane.INFORMATION_MESSAGE);
            }else{
                JOptionPane.showMessageDialog(null, "Selecione um Perfil !!!", "Não Encontrado", JOptionPane.INFORMATION_MESSAGE);
            }
        }else{
            int qtdP = Integer.parseInt(model.getValueAt(linhaSelec, 4).toString());
            if(qtdP == 0){
                String strCod = model.getValueAt(linhaSelec, 0).toString();
                int i = JOptionPane.showConfirmDialog(null, "Deseja Realmente Excluir serviço da Viagem: '"+strCod+"'?", 
                        "Exclusão", JOptionPane.YES_NO_OPTION);
                if(i == JOptionPane.YES_OPTION){
                    int idExc = Integer.parseInt(model.getValueAt(linhaSelec, 0).toString());
                    SC.excluir(idExc);
                    refresh();
                }else if(i == JOptionPane.NO_OPTION){
                    JOptionPane.showMessageDialog(null, "Exclusão Cancelada", "Fechar", JOptionPane.CLOSED_OPTION);
                }
            }else{
                JOptionPane.showMessageDialog(null, "Viagem não pode ser cancelada, possui: " + qtdP +" Passageiros", "Erro", JOptionPane.OK_OPTION);
            }
        }
    }//GEN-LAST:event_btExcluirActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAlterar;
    private javax.swing.JButton btCriar;
    private javax.swing.JButton btExcluir;
    private javax.swing.JButton btFechar;
    private javax.swing.JButton btProcurar;
    private javax.swing.JComboBox<String> cbPrefixo;
    private javax.swing.JComboBox<String> cbServicos;
    private com.toedter.calendar.JDateChooser jDateChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable;
    // End of variables declaration//GEN-END:variables
}
